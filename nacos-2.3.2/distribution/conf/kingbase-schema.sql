/*
 * Copyright 1999-2018 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/******************************************/
/*   表名称 = config_info                  */
/******************************************/
DROP TABLE IF EXISTS config_info;

CREATE TABLE config_info (
                             id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             data_id varchar(255) NOT NULL,
                             group_id varchar(128),
                             content text NOT NULL,
                             md5 varchar(32),
                             gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                             gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                             src_user text,
                             src_ip varchar(50),
                             app_name varchar(128),
                             tenant_id varchar(128) DEFAULT '',
                             c_desc varchar(256),
                             c_use varchar(64),
                             effect varchar(64),
                             type varchar(64),
                             c_schema text,
                             encrypted_data_key text NOT NULL,
                             CONSTRAINT uk_configinfo_datagrouptenant UNIQUE (data_id, group_id, tenant_id)
);

COMMENT ON TABLE config_info IS 'config_info';
COMMENT ON COLUMN config_info.id IS 'id';
COMMENT ON COLUMN config_info.data_id IS 'data_id';
COMMENT ON COLUMN config_info.group_id IS 'group_id';
COMMENT ON COLUMN config_info.content IS 'content';
COMMENT ON COLUMN config_info.md5 IS 'md5';
COMMENT ON COLUMN config_info.gmt_create IS '创建时间';
COMMENT ON COLUMN config_info.gmt_modified IS '修改时间';
COMMENT ON COLUMN config_info.src_user IS 'source user';
COMMENT ON COLUMN config_info.src_ip IS 'source ip';
COMMENT ON COLUMN config_info.app_name IS 'app_name';
COMMENT ON COLUMN config_info.tenant_id IS '租户字段';
COMMENT ON COLUMN config_info.c_desc IS 'configuration description';
COMMENT ON COLUMN config_info.c_use IS 'configuration usage';
COMMENT ON COLUMN config_info.effect IS '配置生效的描述';
COMMENT ON COLUMN config_info.type IS '配置的类型';
COMMENT ON COLUMN config_info.c_schema IS '配置的模式';
COMMENT ON COLUMN config_info.encrypted_data_key IS '密钥';


/******************************************/
/*   表名称 = config_info_aggr             */
/******************************************/
DROP TABLE IF EXISTS config_info_aggr;

CREATE TABLE config_info_aggr (
                                  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  data_id varchar(255) NOT NULL,
                                  group_id varchar(128) NOT NULL,
                                  datum_id varchar(255) NOT NULL,
                                  content text NOT NULL,
                                  gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  app_name varchar(128),
                                  tenant_id varchar(128) DEFAULT '',
                                  CONSTRAINT uk_configinfoaggr_datagrouptenantdatum UNIQUE (data_id, group_id, tenant_id, datum_id)
);

COMMENT ON TABLE config_info_aggr IS '增加租户字段';


/******************************************/
/*   表名称 = config_info_beta             */
/******************************************/
DROP TABLE IF EXISTS config_info_beta;

CREATE TABLE config_info_beta (
                                  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  data_id varchar(255) NOT NULL,
                                  group_id varchar(128) NOT NULL,
                                  app_name varchar(128),
                                  content text NOT NULL,
                                  beta_ips varchar(1024),
                                  md5 varchar(32),
                                  gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  src_user text,
                                  src_ip varchar(50),
                                  tenant_id varchar(128) DEFAULT '',
                                  encrypted_data_key text NOT NULL,
                                  CONSTRAINT uk_configinfobeta_datagrouptenant UNIQUE (data_id, group_id, tenant_id)
);

COMMENT ON TABLE config_info_beta IS 'config_info_beta';


/******************************************/
/*   表名称 = config_info_tag              */
/******************************************/
DROP TABLE IF EXISTS config_info_tag;

CREATE TABLE config_info_tag (
                                 id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 data_id varchar(255) NOT NULL,
                                 group_id varchar(128) NOT NULL,
                                 tenant_id varchar(128) DEFAULT '',
                                 tag_id varchar(128) NOT NULL,
                                 app_name varchar(128),
                                 content text NOT NULL,
                                 md5 varchar(32),
                                 gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 src_user text,
                                 src_ip varchar(50),
                                 CONSTRAINT uk_configinfotag_datagrouptenanttag UNIQUE (data_id, group_id, tenant_id, tag_id)
);

COMMENT ON TABLE config_info_tag IS 'config_info_tag';


/******************************************/
/*   表名称 = config_tags_relation         */
/******************************************/
DROP TABLE IF EXISTS config_tags_relation;

CREATE TABLE config_tags_relation (
                                      id bigint NOT NULL,
                                      tag_name varchar(128) NOT NULL,
                                      tag_type varchar(64),
                                      data_id varchar(255) NOT NULL,
                                      group_id varchar(128) NOT NULL,
                                      tenant_id varchar(128) DEFAULT '',
                                      nid bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      CONSTRAINT uk_configtagrelation_configidtag UNIQUE (id, tag_name, tag_type)
);

CREATE INDEX config_tags_relation_tenant_id_idx ON config_tags_relation(tenant_id);

COMMENT ON TABLE config_tags_relation IS 'config_tag_relation';


/******************************************/
/*   表名称 = group_capacity               */
/******************************************/
DROP TABLE IF EXISTS group_capacity;

CREATE TABLE group_capacity (
                                id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                group_id varchar(128) NOT NULL DEFAULT '',
                                quota int DEFAULT 0,
                                usage int DEFAULT 0,
                                max_size int DEFAULT 0,
                                max_aggr_count int DEFAULT 0,
                                max_aggr_size int DEFAULT 0,
                                max_history_count int DEFAULT 0,
                                gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                CONSTRAINT uk_group_id UNIQUE (group_id)
);

COMMENT ON TABLE group_capacity IS '集群、各Group容量信息表';


/******************************************/
/*   表名称 = his_config_info              */
/******************************************/
DROP TABLE IF EXISTS his_config_info;

CREATE TABLE his_config_info (
                                 id bigint NOT NULL,
                                 nid bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 data_id varchar(255) NOT NULL,
                                 group_id varchar(128) NOT NULL,
                                 app_name varchar(128),
                                 content text NOT NULL,
                                 md5 varchar(32),
                                 gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 src_user text,
                                 src_ip varchar(50),
                                 op_type char(10),
                                 tenant_id varchar(128) DEFAULT '',
                                 encrypted_data_key text NOT NULL
);

CREATE INDEX his_config_info_gmt_create_idx ON his_config_info(gmt_create);
CREATE INDEX his_config_info_gmt_modified_idx ON his_config_info(gmt_modified);
CREATE INDEX his_config_info_data_id_idx ON his_config_info(data_id);

COMMENT ON TABLE his_config_info IS '多租户改造';


/******************************************/
/*   表名称 = tenant_capacity              */
/******************************************/
DROP TABLE IF EXISTS tenant_capacity;

CREATE TABLE tenant_capacity (
                                 id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 tenant_id varchar(128) NOT NULL DEFAULT '',
                                 quota int DEFAULT 0,
                                 usage int DEFAULT 0,
                                 max_size int DEFAULT 0,
                                 max_aggr_count int DEFAULT 0,
                                 max_aggr_size int DEFAULT 0,
                                 max_history_count int DEFAULT 0,
                                 gmt_create timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 gmt_modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 CONSTRAINT uk_tenant_id UNIQUE (tenant_id)
);

COMMENT ON TABLE tenant_capacity IS '租户容量信息表';


/******************************************/
/*   表名称 = tenant_info                 */
/******************************************/
DROP TABLE IF EXISTS tenant_info;

CREATE TABLE tenant_info (
                             id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             kp varchar(128) NOT NULL,
                             tenant_id varchar(128) DEFAULT '',
                             tenant_name varchar(128) DEFAULT '',
                             tenant_desc varchar(256),
                             create_source varchar(32),
                             gmt_create bigint NOT NULL,
                             gmt_modified bigint NOT NULL,
                             CONSTRAINT uk_tenant_info_kptenantid UNIQUE (kp, tenant_id)
);

CREATE INDEX tenant_info_tenant_id_idx ON tenant_info(tenant_id);

COMMENT ON TABLE tenant_info IS 'tenant_info';


/******************************************/
/*   表名称 = users                       */
/******************************************/
DROP TABLE IF EXISTS users;

CREATE TABLE users (
                       username varchar(50) PRIMARY KEY,
                       password varchar(500) NOT NULL,
                       enabled boolean NOT NULL
);

COMMENT ON TABLE users IS '系统用户表';
COMMENT ON COLUMN users.username IS 'username';
COMMENT ON COLUMN users.password IS 'password';
COMMENT ON COLUMN users.enabled IS 'enabled';


/******************************************/
/*   表名称 = roles                       */
/******************************************/
DROP TABLE IF EXISTS roles;

CREATE TABLE roles (
                       username varchar(50) NOT NULL,
                       role varchar(50) NOT NULL,
                       CONSTRAINT idx_user_role UNIQUE (username, role)
);

COMMENT ON TABLE roles IS '角色表';


/******************************************/
/*   表名称 = permissions                 */
/******************************************/
DROP TABLE IF EXISTS permissions;

CREATE TABLE permissions (
                             role varchar(50) NOT NULL,
                             resource varchar(128) NOT NULL,
                             action varchar(8) NOT NULL,
                             CONSTRAINT uk_role_permission UNIQUE (role, resource, action)
);

COMMENT ON TABLE permissions IS '权限表';


/******************************************/
/*   初始化管理员账户                     */
/******************************************/
INSERT INTO users (username, password, enabled)
VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', TRUE);

INSERT INTO roles (username, role) VALUES ('nacos', 'ROLE_ADMIN');
